swagger: "2.0"
info:
  version: "5.0.0"
  title: "Oasis-Scantrad"
host: "api.oasis-scantrad.fr"
basePath: "/"
tags:
- name: "releases"
  description: "Les releases"
- name: "news"
  description: "the latest news"
schemes:
- "http"
paths:
  /releases:
    get:
      tags:
      - "releases"
      summary: "Obtain all releases"
      operationId: "getReleases"
      produces:
      - "application/json"
      responses:
        200:
          description: "All releases"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Release"
  /releases/{releaseId}:
    get:
      tags:
      - "releases"
      summary: "Obtain one release"
      operationId: "getRelease"
      parameters:
        - in: path
          name: releaseId
          required: true
      produces:
      - "application/json"
      responses:
        200:
          description: "One release"
          schema:
            $ref: "#/definitions/Release"
        404:
          description: "Release doesn't exist"
          schema:
            $ref: "#/definitions/Error"
  /news:
    get:
      tags:
      - "news"
      summary: "Obtain list of news"
      operationId: "getNews"
      produces:
      - "application/json"
      responses:
        200:
          description: "All news"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/New"
  /news/{newsId}:
    get:
      tags:
      - "news"
      summary: "Obtain one new"
      operationId: "getNew"
      parameters:
        - in: path
          name: newsId
          required: true
      produces:
      - "application/json"
      responses:
        200:
          description: "One new"
          schema:
            $ref: "#/definitions/New"
        404:
          description: "New doesn't exist"
          schema:
            $ref: "#/definitions/Error"

definitions:
  Chapter:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "Int64"
      chapter:
        type: "integer"
      status:
        $ref: "#/definitions/ChapterStatus"
      datetime:
        type: "string"
        format: "date-time"
  Image:
    type: "object"
    properties:
      small:
        type: "string"
        format: "URL"
        description: "small image link"
      medium:
        type: "string"
        format: "URL"
      big:
        type: "string"
        format: "URL"
      original:
        type: "string"
        format: "URL"
        description: "original image size"
  ChapterStatus:
    type: "object"
    properties: 
      clean:
        type: "object"
        properties:
          users:
            type: "array"
            items:
              $ref: "#/definitions/User"
          value:
            type: "integer"
      traduction:
        type: "object"
        properties:
          users:
            type: "array"
            items:
              $ref: "#/definitions/User"
          value:
            type: "integer"
      verified:
        type: "object"
        properties:
          users:
            type: "array"
            items:
              $ref: "#/definitions/User"
          value:
            type: "integer"
  Release:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      description:
        type: "string"
      image: 
        $ref: "#/definitions/Image"
      category:
        type: "string"
        enum:
        - "manga"
        - "comic"
        - "doujin"
        - "one-shot"
      tags:
        type: "array"
        items:
          type: "string"
      chapters:
        type: "array"
        items:
          $ref: "#/definitions/Chapter"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
      name: 
        type: "string"
      avatar:
        $ref: "#/definitions/Image"
      jobs:
        type: "array"
        items: 
          type: "string"
  New:
    type: "object"
    properties:
      id:
        type: "integer"
      title:
        type: "string"
      content: 
        type: "string"
      author:
        $ref: "#/definitions/User"
      comments:
        type: "array"
        items:
          $ref: "#/definitions/Comment"
      datetime:
        type: "string"
        format: "date-time"
  Comment:
    description: "TO VERIFY"
    type: "object"
    properties:
      id:
        type: "integer"
      author:
        type: "string"
      content: 
        type: "string"
      datetime:
        type: "string"
        format: "date-time"
  Error:
    type: "object"
    properties:
      code: 
        type: "integer"
      description:
        type: "string"
      message:
        type: "string"
      